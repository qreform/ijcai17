%%%%%%%%%%%%%%%%%%%%% Target reformulation: ((p1 | (p2 | p0)) & (p4 | (p5 | p3))) %%%%%%%%%%%%%%%%%%%%%


%%%%%%%%%%%%%%%%%%%%% Original query %%%%%%%%%%%%%%%%%%%%%
%(exists[]Q)
cnf(l_axiom0,axiom,(q)) .




%%%%%%%%%%%%%%%%%%%%% Original axioms %%%%%%%%%%%%%%%%%%%%%


%Non-clausified dependency
%(forall[](f1 --> (p2 | p0)))
%------------------------Clausification start------------------------%
%~f1 | p2 | p0
cnf(l_axiom1,axiom,(~f1 | p2 | p0)) .

%------------------------Clausification end ------------------------%


%Non-clausified dependency
%(forall[]((p2 | p0) --> f1_p))
%------------------------Clausification start------------------------%
%~p2 | f1_p
cnf(l_axiom2,axiom,(~p2 | f1_p)) .

%~p0 | f1_p
cnf(l_axiom3,axiom,(~p0 | f1_p)) .

%------------------------Clausification end ------------------------%


%Non-clausified dependency
%(forall[](f0 --> (p1 | f1)))
%------------------------Clausification start------------------------%
%~f0 | p1 | f1
cnf(l_axiom4,axiom,(~f0 | p1 | f1)) .

%------------------------Clausification end ------------------------%


%Non-clausified dependency
%(forall[]((p1 | f1_p) --> f0_p))
%------------------------Clausification start------------------------%
%~p1 | f0_p
cnf(l_axiom5,axiom,(~p1 | f0_p)) .

%~f1_p | f0_p
cnf(l_axiom6,axiom,(~f1_p | f0_p)) .

%------------------------Clausification end ------------------------%


%Non-clausified dependency
%(forall[](f3 --> (p5 | p3)))
%------------------------Clausification start------------------------%
%~f3 | p5 | p3
cnf(l_axiom7,axiom,(~f3 | p5 | p3)) .

%------------------------Clausification end ------------------------%


%Non-clausified dependency
%(forall[]((p5 | p3) --> f3_p))
%------------------------Clausification start------------------------%
%~p5 | f3_p
cnf(l_axiom8,axiom,(~p5 | f3_p)) .

%~p3 | f3_p
cnf(l_axiom9,axiom,(~p3 | f3_p)) .

%------------------------Clausification end ------------------------%


%Non-clausified dependency
%(forall[](f2 --> (p4 | f3)))
%------------------------Clausification start------------------------%
%~f2 | p4 | f3
cnf(l_axiom10,axiom,(~f2 | p4 | f3)) .

%------------------------Clausification end ------------------------%


%Non-clausified dependency
%(forall[]((p4 | f3_p) --> f2_p))
%------------------------Clausification start------------------------%
%~p4 | f2_p
cnf(l_axiom11,axiom,(~p4 | f2_p)) .

%~f3_p | f2_p
cnf(l_axiom12,axiom,(~f3_p | f2_p)) .

%------------------------Clausification end ------------------------%


%Non-clausified dependency
%(forall[](Q --> (f0 & f2)))
%------------------------Clausification start------------------------%
%~zcl_1 | f0
cnf(l_axiom13,axiom,(~zcl_1 | f0)) .

%~zcl_1 | f2
cnf(l_axiom14,axiom,(~zcl_1 | f2)) .

%~f0 | ~f2 | zcl_1
cnf(l_axiom15,axiom,(~f0 | ~f2 | zcl_1)) .

%~Q | zcl_1
cnf(l_axiom16,axiom,(~q | zcl_1)) .

%------------------------Clausification end ------------------------%


%Non-clausified dependency
%(forall[]((f0_p & f2_p) --> Q))
%------------------------Clausification start------------------------%
%~f0_p | ~f2_p | Q
cnf(l_axiom17,axiom,(~f0_p | ~f2_p | q)) .

%------------------------Clausification end ------------------------%


%%%%%%%%%%%%%%%%%%%%% Transfering axioms %%%%%%%%%%%%%%%%%%%%%


%~p1 | acc_p1
cnf(r_axiom18,axiom,(~p1 | acc_p1)) .


%~p2 | acc_p2
cnf(r_axiom19,axiom,(~p2 | acc_p2)) .


%~p0 | acc_p0
cnf(r_axiom20,axiom,(~p0 | acc_p0)) .


%~p4 | acc_p4
cnf(r_axiom21,axiom,(~p4 | acc_p4)) .


%~p5 | acc_p5
cnf(r_axiom22,axiom,(~p5 | acc_p5)) .


%~p3 | acc_p3
cnf(r_axiom23,axiom,(~p3 | acc_p3)) .


%%%%%%%%%%%%%%%%%%%%% Copy of the axioms %%%%%%%%%%%%%%%%%%%%%


%~acc_f1 | acc_p2 | acc_p0
cnf(r_axiom24,axiom,(~acc_f1 | acc_p2 | acc_p0)) .


%~acc_p2 | acc_f1_p
cnf(r_axiom25,axiom,(~acc_p2 | acc_f1_p)) .


%~acc_p0 | acc_f1_p
cnf(r_axiom26,axiom,(~acc_p0 | acc_f1_p)) .


%~acc_f0 | acc_p1 | acc_f1
cnf(r_axiom27,axiom,(~acc_f0 | acc_p1 | acc_f1)) .


%~acc_p1 | acc_f0_p
cnf(r_axiom28,axiom,(~acc_p1 | acc_f0_p)) .


%~acc_f1_p | acc_f0_p
cnf(r_axiom29,axiom,(~acc_f1_p | acc_f0_p)) .


%~acc_f3 | acc_p5 | acc_p3
cnf(r_axiom30,axiom,(~acc_f3 | acc_p5 | acc_p3)) .


%~acc_p5 | acc_f3_p
cnf(r_axiom31,axiom,(~acc_p5 | acc_f3_p)) .


%~acc_p3 | acc_f3_p
cnf(r_axiom32,axiom,(~acc_p3 | acc_f3_p)) .


%~acc_f2 | acc_p4 | acc_f3
cnf(r_axiom33,axiom,(~acc_f2 | acc_p4 | acc_f3)) .


%~acc_p4 | acc_f2_p
cnf(r_axiom34,axiom,(~acc_p4 | acc_f2_p)) .


%~acc_f3_p | acc_f2_p
cnf(r_axiom35,axiom,(~acc_f3_p | acc_f2_p)) .


%~acc_zcl_1 | acc_f0
cnf(r_axiom36,axiom,(~acc_zcl_1 | acc_f0)) .


%~acc_zcl_1 | acc_f2
cnf(r_axiom37,axiom,(~acc_zcl_1 | acc_f2)) .


%~acc_f0 | ~acc_f2 | acc_zcl_1
cnf(r_axiom38,axiom,(~acc_f0 | ~acc_f2 | acc_zcl_1)) .


%~acc_Q | acc_zcl_1
cnf(r_axiom39,axiom,(~acc_q | acc_zcl_1)) .


%~acc_f0_p | ~acc_f2_p | acc_Q
cnf(r_axiom40,axiom,(~acc_f0_p | ~acc_f2_p | acc_q)) .


%%%%%%%%%%%%%%%%%%%%% Negated copy of the query %%%%%%%%%%%%%%%%%%%%%
%(exists[]acc_Q)
cnf(r_negated_conjecture0,negated_conjecture,(~acc_q)) .


